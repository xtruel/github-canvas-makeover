import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Users, MessageCircle, Heart, FileText, PlusCircle } from 'lucide-react';
import { useQuery } from '@tanstack/react-query';
import { listArticles } from '@/lib/api/articles';
import { listPosts } from '@/lib/api/posts';
import { useState } from 'react';
import { CreatePostModal } from '@/components/modals/CreatePostModal';

const Community = () => {
  const { data: articles } = useQuery({ queryKey:['articles'], queryFn: listArticles });
  const { data: postsData, refetch: refetchPosts } = useQuery({ queryKey:['posts'], queryFn: ()=>listPosts().then(r=>r.items) });
  const [openCreate,setOpenCreate]=useState(false);

  return <div className="container mx-auto px-4 py-8 space-y-10"> <div className="flex items-center justify-between"><h1 className="text-4xl font-bold text-roma-gold">Community Romanisti</h1><Button onClick={()=>setOpenCreate(true)} className="flex gap-2"><PlusCircle className="h-4 w-4"/>Crea Post</Button></div> <div className="grid md:grid-cols-4 gap-6"> <Card className="shadow-glow border-border/50"><CardHeader><CardTitle className="text-roma-gold flex items-center gap-2"><Users className="h-5 w-5"/>Forum</CardTitle></CardHeader><CardContent><p className="text-muted-foreground mb-4">(In arrivo)</p><Button variant="secondary" className="w-full" disabled>(In arrivo)</Button></CardContent></Card> <Card className="shadow-glow border-border/50"><CardHeader><CardTitle className="text-roma-gold flex items-center gap-2"><MessageCircle className="h-5 w-5"/>Chat Live</CardTitle></CardHeader><CardContent><p className="text-muted-foreground mb-4">(In arrivo)</p><Button variant="secondary" className="w-full" disabled>(In arrivo)</Button></CardContent></Card> <Card className="shadow-glow border-border/50"><CardHeader><CardTitle className="text-roma-gold flex items-center gap-2"><Heart className="h-5 w-5"/>Foto & Video</CardTitle></CardHeader><CardContent><p className="text-muted-foreground mb-4">Carica contenuti multimediali</p><p className="text-xs text-muted-foreground">Ora integrato nella creazione post.</p></CardContent></Card> <Card className="shadow-glow border-border/50"><CardHeader><CardTitle className="text-roma-gold flex items-center gap-2"><FileText className="h-5 w-5"/>Articoli (Admin)</CardTitle></CardHeader><CardContent><p className="text-muted-foreground mb-2">Ultime pubblicazioni redazionali.</p><div className="space-y-2 max-h-48 overflow-auto"> {articles?.map(a=> <div key={a.id} className="text-sm"><p className="text-roma-gold font-medium">{a.title}</p><p className="text-xs text-muted-foreground">{a.publishedAt? new Date(a.publishedAt).toLocaleDateString(): 'Bozza'}</p></div> ) || <p className="text-xs text-muted-foreground">Caricamento...</p>} </div></CardContent></Card> </div> <div className="grid md:grid-cols-2 gap-8"> <Card className="shadow-roma border-border/50"><CardHeader><CardTitle className="text-primary">Ultimi Post</CardTitle></CardHeader><CardContent><div className="space-y-4"> {postsData?.length===0 && <p className="text-sm text-muted-foreground">Nessun post ancora.</p>} {postsData?.map(p=> <div key={p.id} className="border-b border-border/50 pb-4 last:border-0 last:pb-0"> <p className="text-roma-gold font-medium">{p.title}</p> {p.type==='TEXT' && <p className="text-sm text-foreground whitespace-pre-wrap">{p.body}</p>} {p.type!=='TEXT' && <p className="text-xs text-muted-foreground">Post media: apri per vedere (estensione futura)</p>} <p className="text-xs text-muted-foreground mt-1">{new Date(p.createdAt).toLocaleString()}</p> </div>) || <p className="text-sm text-muted-foreground">Caricamento...</p>} </div></CardContent></Card> <Card className="shadow-roma border-border/50"><CardHeader><CardTitle className="text-primary">Nota</CardTitle></CardHeader><CardContent><p className="text-sm text-muted-foreground">Forum e Chat arriveranno in una fase successiva.</p></CardContent></Card> </div> <CreatePostModal open={openCreate} onClose={()=>setOpenCreate(false)} onCreated={()=>refetchPosts()} /> </div>; };
export default Community;